version: "3.7"

services:
  nginx:
    restart: always
    image: nginx
    container_name: api_nginx
    ports:
      - '80:80'
      - '443:443'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DOMAIN: ${DOMAIN}
      WEB_API_PORT: ${WEB_API_PORT}
    volumes:
      - web-root:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
      - ./nginx/default.stage.conf:/etc/nginx/conf.d/default.stage.conf.template
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.stage.conf.template > /etc/nginx/conf.d/default.conf && ([ ! -e /etc/ssl/certs/dhparam-2048.pem ] && echo 'start openssl' && openssl dhparam -out /etc/ssl/certs/dhparam-2048.pem 2048 && echo 'done openssl') && nginx -g 'daemon off;' || (nginx -g 'daemon off;')"

  web_api:
    build:
        dockerfile: Dockerfile.web-api.prod
        context: ./
    container_name: web_api_nest
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules 
      - /app/packages/ecn-discord-bot/node_modules
      - /app/packages/ecn-eip712vc/node_modules
      - /app/packages/ecn-prisma/node_modules
      - /app/packages/ecn-sbt-api/node_modules
      - /app/packages/ecn-sbt-contract/node_modules
      - /app/packages/ecn-web-api/node_modules
      - /app/packages/ecn-web-frontend/node_modules
    command: /bin/bash -c "cd /app/packages/ecn-web-api/ && yarn build && ./node_modules/.bin/pm2-runtime start ./dist/main.js"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERT_EMAIL} --agree-tos --no-eff-email --force-renewal --staging -d ${DOMAIN}
    # command: certonly --webroot --webroot-path=/var/www/certbot --email email --agree-tos --no-eff-email --force-renewal -d example.com www.example.com

  redis:
    image: redis
    container_name: tutorial_redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: 
      - redisdata:/data
    ports:
      - 6379:6379

volumes:
  redisdata:
  web-root:
  certbot-etc:
  certbot-var:
  dhparam:
  # pgadmin:
