version: "3.7"

services:
  nginx:
    restart: always
    image: nginx
    container_name: api_nginx
    ports:
      - '80:80'
      - '443:443'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - web_api
    volumes:
      - web-root:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
      - ./nginx/default.prod.conf:/etc/nginx/conf.d/default.prod.conf.template
    environment:
      DOMAIN: ${DOMAIN}
      WEB_API_PORT: ${WEB_API_PORT}
      REDIS_BULLBOARD_PORT: ${REDIS_BULLBOARD_PORT}
      REDIS_BULL_NGINX_PATH: ${REDIS_BULL_NGINX_PATH}
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.prod.conf.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/certbot
    depends_on:
      - nginx
    # command: certonly --webroot --webroot-path=/var/www/certbot --email email --agree-tos --no-eff-email --staging -d   -d 
    #    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  web_api:
    build:
        dockerfile: Dockerfile.web-api.prod
        context: ./
    container_name: web_api
    restart: unless-stopped
    volumes:
      - .:/app
    command: /bin/bash -c "cd /app/packages/ecn-web-api/ && yarn build && node  ./dist/main.js"

  redis_bullboard:
    build:
        dockerfile: Dockerfile.redis-bullboard.prod
        context: ./
    container_name: redis_bullboard
    restart: unless-stopped
    environment:
      REDIS_BULLBOARD_PORT: ${REDIS_BULLBOARD_PORT}
      REDIS_BULL_NGINX_PATH: ${REDIS_BULL_NGINX_PATH}
      REDIS_BULLBOARD_USERNAME: ${REDIS_BULLBOARD_USERNAME}
      REDIS_BULLBOARD_PASSWORD: ${REDIS_BULLBOARD_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
    volumes:
      - .:/app
    command: /bin/bash -c "cd /app/packages/ecn-redis-bullboard/  &&  node ./index.js"

  redis:
    image: redis
    container_name: tutorial_redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: 
      - redisdata:/data
    ports:
      - 6379:6379
    command: --slave-read-only no

volumes:
  redisdata:
  web-root:
  certbot-etc:
  certbot-var:
  dhparam:
  # node_app:
  # pgadmin:
